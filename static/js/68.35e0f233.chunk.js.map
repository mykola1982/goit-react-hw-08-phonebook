{"version":3,"file":"static/js/68.35e0f233.chunk.js","mappings":"iMAEaA,EAAgBC,EAAAA,EAAAA,QAAH,uEAKbC,EAAeD,EAAAA,EAAAA,GAAH,oL,SCJZE,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/B,OACE,UAACL,EAAD,YACE,SAACE,EAAD,UAAeE,IACdC,IAGN,C,mKCPYC,GAAaL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,+IASVO,EAAQP,EAAAA,EAAAA,MAAH,uFAMLQ,GAAQR,EAAAA,EAAAA,GAAOS,EAAAA,GAAPT,CAAH,oSAiBLU,GAAqBV,EAAAA,EAAAA,GAAOW,EAAAA,GAAPX,CAAH,sGAOlBY,EAASZ,EAAAA,EAAAA,OAAH,0f,SC5Bba,EAASC,EAAAA,SAAaC,MAAM,CAChCC,MAAOF,EAAAA,SAEJE,MAAM,+BACNC,SAAS,0BACZC,SAAUJ,EAAAA,SAAaG,SAAS,4BAG5BE,GAAeC,EAAAA,EAAAA,MACfC,GAAkBD,EAAAA,EAAAA,MAElBE,EAAgB,CACpBN,MAAO,GACPE,SAAU,IAGCK,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,+BACE,SAAC,KAAD,CACEH,cAAeA,EACfI,iBAAkBb,EAClBc,SAVe,SAAC,EAAD,GAAyC,IAAtCX,EAAqC,EAArCA,MAAOE,EAA8B,EAA9BA,SAAcU,EAAgB,EAAhBA,UAC3CJ,GAASK,EAAAA,EAAAA,IAAM,CAAEb,MAAAA,EAAOE,SAAAA,KACxBU,GACD,EAIG,UAKE,UAACvB,EAAD,YACE,SAACE,EAAD,CAAOuB,QAASX,EAAhB,oBACA,SAACX,EAAD,CACEuB,GAAIZ,EACJa,KAAK,QACLC,KAAK,QACLC,YAAY,WAEd,SAACxB,EAAD,CAAoBuB,KAAK,QAAQE,UAAU,OAE3C,SAAC5B,EAAD,CAAOuB,QAAST,EAAhB,uBACA,SAACb,EAAD,CACEuB,GAAIV,EACJW,KAAK,WACLC,KAAK,WACLC,YAAY,cAEd,SAACxB,EAAD,CAAoBuB,KAAK,WAAWE,UAAU,cAE9C,SAACvB,EAAD,CAAQoB,KAAK,SAAb,2BAKT,E,UCnEYI,EAAYpC,EAAAA,EAAAA,IAAH,4GCoBtB,EAjBc,WACZ,OACE,4BACG,KACD,UAACoC,EAAD,YACE,SAACC,EAAA,EAAD,WACE,wCAGF,SAACnC,EAAA,EAAD,CAASC,MAAO,qBAAhB,UACE,SAACoB,EAAD,WAKT,C","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login/Login.styled.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const SectionStyled = styled.section`\n  padding-top: 30px;\n  padding-bottom: 15px;\n`;\n\nexport const SectionTitle = styled.h2`\n  font-weight: 700;\n  font-size: 36px;\n  line-height: 42px;\n  text-align: center;\n  letter-spacing: 0.03em;\n  color: #212121;\n  margin-bottom: 12px;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionStyled, SectionTitle } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionStyled>\n      <SectionTitle>{title}</SectionTitle>\n      {children}\n    </SectionStyled>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import { Form, Field, ErrorMessage } from 'formik';\nimport styled from '@emotion/styled';\n\nexport const StyledForm = styled(Form)`\n  width: 800px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n`;\n\nexport const Label = styled.label`\n  font-weight: 500;\n  font-size: 22px;\n  line-height: 1.16;\n`;\n\nexport const Input = styled(Field)`\n  font-size: 18px;\n  line-height: 1.16;\n  width: 300px;\n  height: 26px;\n  border: 2px solid #212121;\n  border-radius: 4px;\n  outline: none;\n  padding: 8px 16px;\n  transition: border-color 250ms linear;\n\n  :hover,\n  :focus {\n    border-color: orange;\n  }\n`;\n\nexport const StyledErrorMessage = styled(ErrorMessage)`\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.16;\n  color: red;\n`;\n\nexport const Button = styled.button`\n  height: 40px;\n  width: 150px;\n  padding: 8px;\n  background-color: orange;\n  border-radius: 4px;\n  border: 2px solid #fff;\n  color: #fff;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.16;\n  text-align: center;\n  letter-spacing: 0.03em;\n  transition: background-color 250ms linear, color 250ms linear,\n    box-shadow 250ms linear;\n  :hover,\n  :focus {\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n    background-color: #fff;\n    color: orange;\n  }\n`;\n","import { Formik } from 'formik';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/authOperations';\nimport * as yup from 'yup';\n\nimport {\n  StyledForm,\n  Label,\n  Input,\n  StyledErrorMessage,\n  Button,\n} from 'components/LoginForm/LoginForm.styled';\n\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Email must be a valid email')\n    .required('This field is required'),\n  password: yup.string().required('This field is required'),\n});\n\nconst idInputEmail = nanoid();\nconst idInputPassword = nanoid();\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = ({ email, password }, { resetForm }) => {\n    dispatch(logIn({ email, password }));\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <Label htmlFor={idInputEmail}>Email</Label>\n          <Input\n            id={idInputEmail}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n          />\n          <StyledErrorMessage name=\"email\" component=\"p\" />\n\n          <Label htmlFor={idInputPassword}>Password</Label>\n          <Input\n            id={idInputPassword}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n          />\n          <StyledErrorMessage name=\"password\" component=\"password\" />\n\n          <Button type=\"submit\">Log in </Button>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 1200px;\n  margin: 0 auto;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm';\nimport { Section } from 'components/Section';\nimport { Container } from 'pages/Login/Login.styled';\n\nconst Login = () => {\n  return (\n    <main>\n      {' '}\n      <Container>\n        <Helmet>\n          <title>Login</title>\n        </Helmet>\n\n        <Section title={'Login to Phonebook'}>\n          <LoginForm />\n        </Section>\n      </Container>\n    </main>\n  );\n};\n\nexport default Login;\n"],"names":["SectionStyled","styled","SectionTitle","Section","title","children","StyledForm","Form","Label","Input","Field","StyledErrorMessage","ErrorMessage","Button","schema","yup","shape","email","required","password","idInputEmail","nanoid","idInputPassword","initialValues","LoginForm","dispatch","useDispatch","validationSchema","onSubmit","resetForm","logIn","htmlFor","id","type","name","placeholder","component","Container","Helmet"],"sourceRoot":""}