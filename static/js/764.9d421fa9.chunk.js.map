{"version":3,"file":"static/js/764.9d421fa9.chunk.js","mappings":"kMAEaA,EAAgBC,EAAAA,EAAAA,QAAH,uEAKbC,EAAeD,EAAAA,EAAAA,GAAH,oL,SCJZE,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/B,OACE,UAACL,EAAD,YACE,SAACE,EAAD,UAAeE,IACdC,IAGN,C,wJCPYC,GAAaL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,+IASVO,EAAQP,EAAAA,EAAAA,MAAH,uFAMLQ,GAAQR,EAAAA,EAAAA,GAAOS,EAAAA,GAAPT,CAAH,oSAiBLU,GAAqBV,EAAAA,EAAAA,GAAOW,EAAAA,GAAPX,CAAH,sGAOlBY,EAASZ,EAAAA,EAAAA,OAAH,0f,SC5Bba,GAAcC,EAAAA,EAAAA,MACdC,GAAeD,EAAAA,EAAAA,MACfE,GAAkBF,EAAAA,EAAAA,MAElBG,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGCC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAAC,KAAD,CAAQN,cAAeA,EAAeO,SANnB,SAAC,EAAD,GAA+C,IAA5CN,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAcK,EAAgB,EAAhBA,UACjDH,GAASI,EAAAA,EAAAA,IAAS,CAAER,KAAAA,EAAMC,MAAAA,EAAOC,SAAAA,KACjCK,GACD,EAGC,UACE,UAACpB,EAAD,YACE,SAACE,EAAD,CAAOoB,QAASd,EAAhB,mBACA,SAACL,EAAD,CAAOoB,GAAIf,EAAagB,KAAK,OAAOX,KAAK,OAAOY,YAAY,UAC5D,SAACpB,EAAD,CAAoBQ,KAAK,OAAOa,UAAU,OAE1C,SAACxB,EAAD,CAAOoB,QAASZ,EAAhB,oBACA,SAACP,EAAD,CACEoB,GAAIb,EACJc,KAAK,QACLX,KAAK,QACLY,YAAY,WAEd,SAACpB,EAAD,CAAoBQ,KAAK,QAAQa,UAAU,OAE3C,SAACxB,EAAD,CAAOoB,QAASX,EAAhB,uBACA,SAACR,EAAD,CACEoB,GAAIZ,EACJa,KAAK,WACLX,KAAK,WACLY,YAAY,cAEd,SAACpB,EAAD,CAAoBQ,KAAK,WAAWa,UAAU,cAE9C,SAACnB,EAAD,CAAQiB,KAAK,SAAb,0BAIP,E,UC1DYG,EAAYhC,EAAAA,EAAAA,IAAH,4GCmBtB,EAhBiB,WACf,OACE,2BACE,UAACgC,EAAD,YACE,SAACC,EAAA,EAAD,WACE,+CAGF,SAAC/B,EAAA,EAAD,CAASC,MAAO,4BAAhB,UACE,SAACkB,EAAD,UAKT,C","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.styled.jsx","pages/Register/Register.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const SectionStyled = styled.section`\n  padding-top: 30px;\n  padding-bottom: 15px;\n`;\n\nexport const SectionTitle = styled.h2`\n  font-weight: 700;\n  font-size: 36px;\n  line-height: 42px;\n  text-align: center;\n  letter-spacing: 0.03em;\n  color: #212121;\n  margin-bottom: 12px;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionStyled, SectionTitle } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionStyled>\n      <SectionTitle>{title}</SectionTitle>\n      {children}\n    </SectionStyled>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import { Form, Field, ErrorMessage } from 'formik';\nimport styled from '@emotion/styled';\n\nexport const StyledForm = styled(Form)`\n  width: 800px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n`;\n\nexport const Label = styled.label`\n  font-weight: 500;\n  font-size: 22px;\n  line-height: 1.16;\n`;\n\nexport const Input = styled(Field)`\n  font-size: 18px;\n  line-height: 1.16;\n  width: 300px;\n  height: 26px;\n  border: 2px solid #212121;\n  border-radius: 4px;\n  outline: none;\n  padding: 8px 16px;\n  transition: border-color 250ms linear;\n\n  :hover,\n  :focus {\n    border-color: orange;\n  }\n`;\n\nexport const StyledErrorMessage = styled(ErrorMessage)`\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.16;\n  color: red;\n`;\n\nexport const Button = styled.button`\n  height: 40px;\n  width: 150px;\n  padding: 8px;\n  background-color: orange;\n  border-radius: 4px;\n  border: 2px solid #fff;\n  color: #fff;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.16;\n  text-align: center;\n  letter-spacing: 0.03em;\n  transition: background-color 250ms linear, color 250ms linear,\n    box-shadow 250ms linear;\n  :hover,\n  :focus {\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n    background-color: #fff;\n    color: orange;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport { nanoid } from 'nanoid';\n\nimport { register } from 'redux/auth/authOperations';\n\nimport {\n  StyledForm,\n  Label,\n  Input,\n  StyledErrorMessage,\n  Button,\n} from 'components/RegisterForm/RegisterForm.styled';\n\nconst idInputName = nanoid();\nconst idInputEmail = nanoid();\nconst idInputPassword = nanoid();\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = ({ name, email, password }, { resetForm }) => {\n    dispatch(register({ name, email, password }));\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n      <StyledForm>\n        <Label htmlFor={idInputName}>Name</Label>\n        <Input id={idInputName} type=\"text\" name=\"name\" placeholder=\"Name\" />\n        <StyledErrorMessage name=\"name\" component=\"p\" />\n\n        <Label htmlFor={idInputEmail}>Email</Label>\n        <Input\n          id={idInputEmail}\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n        />\n        <StyledErrorMessage name=\"email\" component=\"p\" />\n\n        <Label htmlFor={idInputPassword}>Password</Label>\n        <Input\n          id={idInputPassword}\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n        />\n        <StyledErrorMessage name=\"password\" component=\"password\" />\n\n        <Button type=\"submit\">Register</Button>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 1200px;\n  margin: 0 auto;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm';\nimport { Section } from 'components/Section';\nimport { Container } from './Register.styled';\n\nconst Register = () => {\n  return (\n    <main>\n      <Container>\n        <Helmet>\n          <title>Registration</title>\n        </Helmet>\n\n        <Section title={'Sign up for the Phonebook'}>\n          <RegisterForm />\n        </Section>\n      </Container>\n    </main>\n  );\n};\n\nexport default Register;\n"],"names":["SectionStyled","styled","SectionTitle","Section","title","children","StyledForm","Form","Label","Input","Field","StyledErrorMessage","ErrorMessage","Button","idInputName","nanoid","idInputEmail","idInputPassword","initialValues","name","email","password","RegisterForm","dispatch","useDispatch","onSubmit","resetForm","register","htmlFor","id","type","placeholder","component","Container","Helmet"],"sourceRoot":""}